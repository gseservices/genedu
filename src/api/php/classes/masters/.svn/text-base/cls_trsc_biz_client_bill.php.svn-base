<?php
include_once BASE_PATH . '\classes\clsBase.php';
include_once BASE_PATH . '\classes\masters\cls_gen_acc_voucher_type.php';
include_once BASE_PATH . '\classes\masters\cls_gen_biz_work_type.php';

class cls_trsc_biz_client_bill extends clsBase
{	
	public $m_pk_client_bill_id=0;
	public $m_fk_uk_trans_code="";
	public $m_received_name="";
	public $m_bill_date="";
	public $m_notification_method="";
	public $m_pay_mode="";
	public $m_bill_type="";
	public $m_amount=0;
	public $m_advance=0;
	public $m_description="";
	public $mCreatedBy=2;
	public $mUpdatedby=2;
	public $m_p_xml="";
	public $m_isnested="N";
	public $dbal;

	function __construct()
	{
		parent::connect();
		$this->dbal= new DBAL($this->myLink);
	}

	public function Add()
	{
		try{
			$sql = "CALL spt_iu_trsc_biz_client_bill(".$this->m_pk_client_bill_id.",'".$this->m_fk_uk_trans_code."','".$this->m_received_name."','".$this->m_bill_date."','".$this->m_notification_method."','".$this->m_pay_mode."','".$this->m_bill_type."',".$this->m_amount.",".$this->m_advance.",'".$this->m_description."',".$this->mCreatedBy.",".$this->mUpdatedby.",$this->m_p_xml)";			
			//echo $sql ;
			$result = $this->dbal->execScalar($sql,false);
			return $result;
		}catch (Exception $ex)
		{
			$this->WriteLog($ex);
		}
	}

	public function Update()
	{
		try{
			$sql = "CALL spt_iu_trsc_biz_client_bill(".$this->m_pk_client_bill_id.",'".$this->m_fk_uk_trans_code."','".$this->m_received_name."','".$this->m_bill_date."','".$this->m_notification_method."','".$this->m_pay_mode."','".$this->m_bill_type."',".$this->m_amount.",".$this->m_advance.",'".$this->m_description."',".$this->mCreatedBy.",".$this->mUpdatedby.",$this->m_p_xml)";
			$result = $this->dbal->execScalar($sql,false);
			echo $result;
		}catch (Exception $ex)
		{
			$this->WriteLog($ex);
		}
	}

	public function Delete()
	{
		try{
			$sql = "CALL spt_sfd_trsc_biz_client_bill(".$this->m_pk_client_bill_id.",".$this->m_deleted_by.",'".$this->m_deletedtype."')";
			//echo "Delete sql : ".$sql ;
			$result = $this->dbal->execScalar($sql,false);
			return $result;
		}catch (Exception $ex)
		{
			$this->WriteLog($ex);
		}
	}

	public function GetData($mode = SELECT_MODE_VIEW, $returntype =SELECT_RETURN_TYPE_JSONSTRING, $dbobj="",$projectionList="*",$filter="")
	{
		switch($mode)
		{
			case SELECT_MODE_VIEW:
				$sql = " SELECT ". $projectionList ." FROM ". $dbobj . (($filter == "")? "" : " WHERE " . $filter);
				break;
			case SELECT_MODE_TABLE :
				$sql = " SELECT ". $projectionList ." FROM ". $dbobj . (($filter == "")? "" : " WHERE " . $filter);

				break;
			case SELECT_MODE_SP:
				$sql = "CALL ". $dbobj . ($filter == "")? "" : "(". $filter .")";

				break;
			default:
				$sql = " SELECT ". $projectionList ." FROM ". $dbobj . ($filter == "")? "" : " WHERE " . $filter;
				break;
		}
		//$sql = " SELECT ". $projectionList ." FROM ". $dbobj ;//. ($filter == "")? "" : " WHERE " . $filter;
		//echo $sql;
		$qry_res = $this->dbal->execReader($sql);

	if($qry_res)
		{
			$rec_set = $this->dbal->fetchData($qry_res, true);
			//print_r($rec_set);
		}else {
			//echo "no data";
			return "NODATA";
		}

		if($rec_set)
		{
			if($returntype == SELECT_RETURN_TYPE_JSONSTRING )
			{
				$return_str = json_encode($rec_set);				
				return $this->sanitizeBlankJSONRecordset($return_str);
			}
		}else{
			return $this->sanitizeBlankJSONRecordset();
		}	
	}
	public function getAllMastersRequired(){
		try {
			$req_deps ['client_bill'] = "";
			//Transaction Code
			$jsonTransCode= "";
			$objTransCode =  new cls_gen_biz_work_type();
			$jsonTransCode = $objTransCode->GetData(SELECT_MODE_TABLE,SELECT_RETURN_TYPE_JSONSTRING,'trsc_biz_client_workout_details','uk_trans_code,uk_trans_code', "");
			$req_deps ['trans_code'] = $jsonTransCode;
			$objTransCode = null;		
			//Work Type Code
			$jsonWorkTypeCode = "";
			$objWorkTypeCode =  new cls_gen_biz_work_type();
			$jsonWorkTypeCode = $objWorkTypeCode->GetData(SELECT_MODE_TABLE,SELECT_RETURN_TYPE_JSONSTRING,'mst_biz_work_type','uk_work_type_code,work_name', "");
			$req_deps ['worktype'] = $jsonWorkTypeCode ;
			$objWorkTypeCode = null;

			return json_encode($req_deps);

		} catch (Exception $e) {
			$this->WriteLog($ex);
		}
	}
}
?>